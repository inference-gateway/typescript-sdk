{
  "name": "TypeScript Development",
  "dockerFile": "Dockerfile",
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:latest": {}
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-typescript-next",
        "streetsidesoftware.code-spell-checker",
        "42Crunch.vscode-openapi",
        "ms-azuretools.vscode-docker",
        "github.vscode-github-actions",
        "github.vscode-pull-request-github",
        "yzhang.markdown-all-in-one",
        "eamodio.gitlens",
        "VisualStudioExptTeam.vscodeintellicode",
        "christian-kohler.path-intellisense",
        "christian-kohler.npm-intellisense",
        "orta.vscode-jest"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "zsh",
        "editor.renderWhitespace": "all",
        "cSpell.enabled": true,
        "cSpell.files": ["**/*.md", "**/*.ts"],
        "prettier.requireConfig": true,
        "prettier.useEditorConfig": true,
        "prettier.configPath": ".prettierrc.json",
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.codeActionsOnSave": {
            "source.organizeImports": "always",
            "source.fixAll.eslint": "always"
          }
        },
        "typescript.updateImportsOnFileMove.enabled": "always",
        "typescript.suggest.completeFunctionCalls": true,
        "git.enableCommitSigning": true,
        "dev.containers.copyGitConfig": true,
        "files.insertFinalNewline": true,
        "github.copilot.enable": {
          "*": true
        },
        "github.copilot.advanced": {
          "authProvider": "github"
        },
        "github.copilot.chat.codeGeneration.useInstructionFiles": true,
        "github.copilot.chat.codeGeneration.instructions": [
          {
            "file": ".github/copilot-instructions.md"
          },
          {
            "file": "../README.md"
          }
        ],
        "github.copilot.chat.commitMessageGeneration.instructions": [
          {
            "text": "Always use conventional commit message format."
          }
        ],
        "mcp": {
          "servers": {
            "context7": {
              "command": "docker",
              "args": [
                "run",
                "-i",
                "--rm",
                "node:lts",
                "npx",
                "-y",
                "@upstash/context7-mcp@latest"
              ]
            }
          }
        }
      }
    }
  },
  "remoteEnv": {
    "GITHUB_TOKEN": "${localEnv:GITHUB_TOKEN}"
  }
}
